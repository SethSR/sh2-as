
COMMENT = _{ ";" ~ (!NEWLINE ~ ANY)* }
WHITESPACE = _{ " " }

/** Symbols **/

tab = _{ "\t" }

/** Assembler Calculations **/

op = _{ op_add | op_sub | op_mul | op_div | op_mod | op_pow }
	op_add = { "+" }
	op_sub = { "-" }
	op_mul = { "*" }
	op_div = { "/" }
	op_mod = { "%" }
	op_pow = { "^" }
term = _{ num | lbl | "(" ~ expr ~ ")" }
expr = { term ~ (op ~ term)* }

/** Registers **/

pc   = { ^"pc"   }
sp   = { ^"sp"   }
r0   = { ^"r0"   }
gbr  = { ^"gbr"  }
sr   = { ^"sr"   }
vbr  = { ^"vbr"  }
mach = { ^"mach" }
macl = { ^"macl" }
pr   = { ^"pr"   }

reg_ctrl = _{ gbr | sr | vbr }
reg_spec = _{ mach | macl | pr }

reg = { ^"r" ~ ("1" ~ '0'..'5' | ASCII_DIGIT) }

/** Numbers & Immediates **/

hex  = @{ (ASCII_HEX_DIGIT | "_")+ }
bin  = @{ ('0'..'1' | "_")+ }
dec  = @{ "-"? ~ (ASCII_DIGIT | "_")+ }

imm_hex = _{ "$" ~ hex }
imm_bin = _{ "%" ~ bin }
num = _{ imm_hex | imm_bin | dec }
imm = _{ "#" ~ term }

/** Argument Types **/

reg_or_sp      = _{ reg | sp }
addr_reg_or_sp = @{ "@" ~ reg_or_sp }
reg_post_inc   = @{ "@" ~ reg_or_sp ~ "+" }
reg_pre_dec    = @{ "@" ~ "-" ~ reg_or_sp }
disp_reg       = { "@(" ~ (num | lbl) ~ "," ~ reg_or_sp ~ ")" }
disp_gbr       = { "@(" ~ (num | lbl) ~ "," ~ gbr       ~ ")" }
disp_pc        = { "@(" ~ (num | lbl) ~ "," ~ pc        ~ ")" }
disp_r0        = { "@(" ~ r0 ~ "," ~ reg_or_sp ~ ")" }
disp_r0_gbr    = { "@(" ~ r0 ~ "," ~ gbr       ~ ")" }

/** Argument pairs **/

addr_reg_or_sp__reg_or_sp  = _{ addr_reg_or_sp ~ "," ~ reg_or_sp      }
disp_gbr__r0               = _{ disp_gbr       ~ "," ~ r0             }
disp_pc__r0                = _{ disp_pc        ~ "," ~ r0             }
disp_pc__reg_or_sp         = _{ disp_pc        ~ "," ~ reg_or_sp      }
disp_r0__reg_or_sp         = _{ disp_r0        ~ "," ~ reg_or_sp      }
disp_reg__r0               = _{ disp_reg       ~ "," ~ r0             }
disp_reg__reg_or_sp        = _{ disp_reg       ~ "," ~ reg_or_sp      }
imm__r0                    = _{ imm            ~ "," ~ r0             }
imm__reg_or_sp             = _{ imm            ~ "," ~ reg_or_sp      }
imm__disp_r0_gbr           = _{ imm            ~ "," ~ disp_r0_gbr    }
r0__disp_gbr               = _{ r0             ~ "," ~ disp_gbr       }
r0__disp_reg               = _{ r0             ~ "," ~ disp_reg       }
reg_ctrl__reg_or_sp        = _{ reg_ctrl       ~ "," ~ reg_or_sp      }
reg_ctrl__reg_pre_dec      = _{ reg_ctrl       ~ "," ~ reg_pre_dec    }
reg_or_sp__addr_reg_or_sp  = _{ reg_or_sp      ~ "," ~ addr_reg_or_sp }
reg_or_sp__disp_r0         = _{ reg_or_sp      ~ "," ~ disp_r0        }
reg_or_sp__disp_reg        = _{ reg_or_sp      ~ "," ~ disp_reg       }
reg_or_sp__reg_ctrl        = _{ reg_or_sp      ~ "," ~ reg_ctrl       }
reg_or_sp__reg_or_sp       = _{ reg_or_sp      ~ "," ~ reg_or_sp      }
reg_or_sp__reg_pre_dec     = _{ reg_or_sp      ~ "," ~ reg_pre_dec    }
reg_or_sp__reg_spec        = _{ reg_or_sp      ~ "," ~ reg_spec       }
reg_post_inc__reg_ctrl     = _{ reg_post_inc   ~ "," ~ reg_ctrl       }
reg_post_inc__reg_or_sp    = _{ reg_post_inc   ~ "," ~ reg_or_sp      }
reg_post_inc__reg_post_inc = _{ reg_post_inc   ~ "," ~ reg_post_inc   }
reg_post_inc__reg_spec     = _{ reg_post_inc   ~ "," ~ reg_spec       }
reg_spec__reg_or_sp        = _{ reg_spec       ~ "," ~ reg_or_sp      }
reg_spec__reg_pre_dec      = _{ reg_spec       ~ "," ~ reg_pre_dec    }

/** 0-Argument Instructions **/

ins_clrmac = { ^"clrmac" }
ins_clrt   = { ^"clrt" }
ins_div0u  = { ^"div0u" }
ins_nop    = { ^"nop" }
ins_rte    = { ^"rte" }
ins_rts    = { ^"rts" }
ins_sett   = { ^"sett" }
ins_sleep  = { ^"sleep" }

/** 1-Argument Instructions **/

ins_bf     = { ^"bf"     ~ lbl }
ins_bfs    = { ^"bf/s"   ~ lbl }
ins_bra    = { ^"bra"    ~ lbl }
ins_braf   = { ^"braf"   ~ reg_or_sp }
ins_bsr    = { ^"bsr"    ~ lbl }
ins_bsrf   = { ^"bsrf"   ~ reg_or_sp }
ins_bt     = { ^"bt"     ~ lbl }
ins_bts    = { ^"bt/s"   ~ lbl }
ins_dt     = { ^"dt"     ~ reg_or_sp }
ins_jmp    = { ^"jmp"    ~ addr_reg_or_sp }
ins_jsr    = { ^"jsr"    ~ addr_reg_or_sp }
ins_movt   = { ^"movt"   ~ reg_or_sp }
ins_rotcl  = { ^"rotcl"  ~ reg_or_sp }
ins_rotcr  = { ^"rotcr"  ~ reg_or_sp }
ins_rotl   = { ^"rotl"   ~ reg_or_sp }
ins_rotr   = { ^"rotr"   ~ reg_or_sp }
ins_shal   = { ^"shal"   ~ reg_or_sp }
ins_shar   = { ^"shar"   ~ reg_or_sp }
ins_shll   = { ^"shll"   ~ reg_or_sp }
ins_shll16 = { ^"shll16" ~ reg_or_sp }
ins_shll2  = { ^"shll2"  ~ reg_or_sp }
ins_shll8  = { ^"shll8"  ~ reg_or_sp }
ins_shlr   = { ^"shlr"   ~ reg_or_sp }
ins_shlr16 = { ^"shlr16" ~ reg_or_sp }
ins_shlr2  = { ^"shlr2"  ~ reg_or_sp }
ins_shlr8  = { ^"shlr8"  ~ reg_or_sp }
ins_tas    = { ^"tas.b"  ~ addr_reg_or_sp }
ins_trapa  = { ^"trapa"  ~ imm }

/** 2-Argument Instructions **/

ins_addc  = { ^"addc"   ~ reg_or_sp__reg_or_sp }
ins_addv  = { ^"addv"   ~ reg_or_sp__reg_or_sp }
ins_div0s = { ^"div0s"  ~ reg_or_sp__reg_or_sp }
ins_div1  = { ^"div1"   ~ reg_or_sp__reg_or_sp }
ins_extsb = { ^"exts.b" ~ reg_or_sp__reg_or_sp }
ins_extsw = { ^"exts.w" ~ reg_or_sp__reg_or_sp }
ins_extub = { ^"extu.b" ~ reg_or_sp__reg_or_sp }
ins_extuw = { ^"extu.w" ~ reg_or_sp__reg_or_sp }
ins_macw  = { ^"mac.w"  ~ reg_post_inc__reg_post_inc }
ins_mova  = { ^"mova"   ~ disp_pc__r0 }
ins_neg   = { ^"neg"    ~ reg_or_sp__reg_or_sp }
ins_negc  = { ^"negc"   ~ reg_or_sp__reg_or_sp }
ins_not   = { ^"not"    ~ reg_or_sp__reg_or_sp }
ins_sub   = { ^"sub"    ~ reg_or_sp__reg_or_sp }
ins_subc  = { ^"subc"   ~ reg_or_sp__reg_or_sp }
ins_subv  = { ^"subv"   ~ reg_or_sp__reg_or_sp }
ins_swapb = { ^"swap.b" ~ reg_or_sp__reg_or_sp }
ins_swapw = { ^"swap.w" ~ reg_or_sp__reg_or_sp }
ins_xtrct = { ^"xtrct"  ~ reg_or_sp__reg_or_sp }

ins_and_imm = { ^"and" ~ imm__r0 }
ins_and_reg = { ^"and" ~ reg_or_sp__reg_or_sp }
ins_and_byt = { ^"and.b" ~ imm__disp_r0_gbr }
ins_and = _{ ins_and_byt | ins_and_imm | ins_and_reg }
ins_or_imm = { ^"or" ~ imm__r0 }
ins_or_reg = { ^"or" ~ reg_or_sp__reg_or_sp }
ins_or_byt = { ^"or.b" ~ imm__disp_r0_gbr }
ins_or  = _{ ins_or_byt | ins_or_imm | ins_or_reg }
ins_tst_imm = { ^"tst" ~ imm__r0 }
ins_tst_reg = { ^"tst" ~ reg_or_sp__reg_or_sp }
ins_tst_byt = { ^"tst.b" ~ imm__disp_r0_gbr }
ins_tst = _{ ins_tst_byt | ins_tst_imm | ins_tst_reg }
ins_xor_imm = { ^"xor" ~ imm__r0 }
ins_xor_reg = { ^"xor" ~ reg_or_sp__reg_or_sp }
ins_xor_byt = { ^"xor.b" ~ imm__disp_r0_gbr }
ins_xor = _{ ins_xor_byt | ins_xor_imm | ins_xor_reg }

ins_cmp_eq_imm = { ^"cmp/eq"  ~ imm__r0 }
ins_cmp_eq_reg = { ^"cmp/eq"  ~ reg_or_sp__reg_or_sp }
ins_cmp_ge     = { ^"cmp/ge"  ~ reg_or_sp__reg_or_sp }
ins_cmp_gt     = { ^"cmp/gt"  ~ reg_or_sp__reg_or_sp }
ins_cmp_hi     = { ^"cmp/hi"  ~ reg_or_sp__reg_or_sp }
ins_cmp_hs     = { ^"cmp/hs"  ~ reg_or_sp__reg_or_sp }
ins_cmp_str    = { ^"cmp/str" ~ reg_or_sp__reg_or_sp }
ins_cmp_pl     = { ^"cmp/pl"  ~ reg_or_sp }
ins_cmp_pz     = { ^"cmp/pz"  ~ reg_or_sp }
ins_cmp = _{
	ins_cmp_eq_imm
	| ins_cmp_eq_reg
	| ins_cmp_ge
	| ins_cmp_gt
	| ins_cmp_hi
	| ins_cmp_hs
	| ins_cmp_str
	| ins_cmp_pl
	| ins_cmp_pz
}

ins_add_imm = { ^"add" ~ imm__reg_or_sp }
ins_add_reg = { ^"add" ~ reg_or_sp__reg_or_sp }
ins_add = _{ ins_add_imm | ins_add_reg }

ins_mul     = { (^"mul.l" | ^"mul")   ~ reg_or_sp__reg_or_sp }
ins_muls    = { (^"muls.w" | ^"muls") ~ reg_or_sp__reg_or_sp }
ins_mulu    = { (^"mulu.w" | ^"mulu") ~ reg_or_sp__reg_or_sp }
ins_ldc     = { ^"ldc"   ~ reg_or_sp__reg_ctrl }
ins_ldc_inc = { ^"ldc.l" ~ reg_post_inc__reg_ctrl }
ins_lds     = { ^"lds"   ~ reg_or_sp__reg_spec }
ins_lds_inc = { ^"lds.l" ~ reg_post_inc__reg_spec }
ins_stc     = { ^"stc"   ~ reg_ctrl__reg_or_sp }
ins_stc_dec = { ^"stc.l" ~ reg_ctrl__reg_pre_dec }
ins_sts     = { ^"sts"   ~ reg_spec__reg_or_sp }
ins_sts_dec = { ^"sts.l" ~ reg_spec__reg_pre_dec }
ins_macl    = { (^"mac.l"   | ^"mac")   ~ reg_post_inc__reg_post_inc }
ins_dmuls   = { (^"dmuls.l" | ^"dmuls") ~ reg_or_sp__reg_or_sp }
ins_dmulu   = { (^"dmulu.l" | ^"dmulu") ~ reg_or_sp__reg_or_sp }

mov_common = _{
	imm__reg_or_sp
	| addr_reg_or_sp__reg_or_sp
	| disp_gbr__r0
	| disp_r0__reg_or_sp
	| r0__disp_gbr
	| reg_or_sp__addr_reg_or_sp
	| reg_or_sp__disp_r0
	| reg_or_sp__reg_or_sp
	| reg_or_sp__reg_pre_dec
	| reg_post_inc__reg_or_sp
}
ins_movb =  { mov_common | disp_reg__r0 | r0__disp_reg }
ins_movw =  { mov_common | disp_reg__r0 | r0__disp_reg | disp_pc__reg_or_sp }
ins_movl =  { mov_common | disp_pc__reg_or_sp | disp_reg__reg_or_sp | reg_or_sp__disp_reg }
ins_mov  = _{ ^"mov.b" ~ ins_movb | ^"mov.w" ~ ins_movw | (^"mov.l" | ^"mov") ~ ins_movl }

ins = _{
	| ins_add
	| ins_addc
	| ins_addv
	| ins_and
	| ins_bf
	| ins_bfs
	| ins_bra
	| ins_braf
	| ins_bsr
	| ins_bsrf
	| ins_bt
	| ins_bts
	| ins_clrmac
	| ins_clrt
	| ins_cmp
	| ins_div0s
	| ins_div0u
	| ins_div1
	| ins_dmuls
	| ins_dmulu
	| ins_dt
	| ins_extsb
	| ins_extsw
	| ins_extub
	| ins_extuw
	| ins_jmp
	| ins_jsr
	| ins_ldc_inc
	| ins_ldc
	| ins_lds_inc
	| ins_lds
	| ins_macw
	| ins_macl
	| ins_mov
	| ins_mova
	| ins_movt
	| ins_mul
	| ins_muls
	| ins_mulu
	| ins_neg
	| ins_negc
	| ins_nop
	| ins_not
	| ins_or
	| ins_rotcl
	| ins_rotcr
	| ins_rotl
	| ins_rotr
	| ins_rte
	| ins_rts
	| ins_sett
	| ins_shal
	| ins_shar
	| ins_shll
	| ins_shll16
	| ins_shll2
	| ins_shll8
	| ins_shlr
	| ins_shlr16
	| ins_shlr2
	| ins_shlr8
	| ins_sleep
	| ins_stc_dec
	| ins_stc
	| ins_sts_dec
	| ins_sts
	| ins_sub
	| ins_subc
	| ins_subv
	| ins_swapb
	| ins_swapw
	| ins_tas
	| ins_trapa
	| ins_tst
	| ins_xor
	| ins_xtrct
}

/** Assembler Directives **/

file_path = @{ "\"" ~ (!"\"" ~ ANY)+ ~ "\"" }

dir_constant_b = { ^".dc.b" ~ num }
dir_constant_w = { ^".dc.w" ~ num }
dir_constant_l = { ^".dc.l" ~ num }
dir_constant = _{ dir_constant_b | dir_constant_w | dir_constant_l }

dir_org      = { ^".org" ~ num }
dir_repeat   = { ^".arepeat" ~ num }
dir_endr     = { ^".aendr" }
dir_binclude = { ^".binclude" ~ file_path }
dir_align    = { ^".align" ~ ("2" | "4" | "8" | "16" | "32" | "64") }

dir = _{
	dir_constant
	| dir_org
	| dir_repeat
	| dir_endr
	| dir_binclude
	| dir_align
}

lbl = { !ASCII_DIGIT ~ (ASCII_ALPHANUMERIC | "_")+ }

lbl_line = @{ lbl ~ ":" }
val_line = { lbl ~ "=" ~ (num | lbl) }

line = _{ tab ~ (ins | dir)? | lbl_line | val_line | NEWLINE }
lines = _{ line* }
program = _{ SOI ~ lines ~ EOI }

